tmp <- rnorm(100)
plot(tmp)
hist(tmp)
ls()
example(stepfun)
plot(sfun1)
sfun1
plot(sfun.2)
sfunt2
sfun.2
grades <- c("F","D","C","B","A")
gardes
grades
stepfun(grades,c(.1,.3,.4,.7,.8))
stepfun(factor(grades),c(.1,.3,.4,.7,.8))
stepfun(1:4,c(.1,.3,.4,.7,.8))
plto(stepfun(1:4,c(.1,.3,.4,.7,.8)))
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)))
segments(c(1,2),c(.5,.5), col="red")
segments(1,.5,2,.5, col="red")
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)), anna=FALSE)
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)), ann=FALSE)
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)), ann=FALSE)
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)), ann=FALSE)
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)), ann=FALSE)
plot(stepfun(1:4,c(.1,.3,.4,.7,.8)), ann=FALSE)
x <- rnorm(100)
ecdf(x)
plot(ecdf(x))
manipulate(
boxplot(Freq ~ Class, data = Titanic, outline = outline),
outline = checkbox(FALSE, "Show outliers"))
library(manipulate)
manipulate(
boxplot(Freq ~ Class, data = Titanic, outline = outline),
outline = checkbox(FALSE, "Show outliers"))
?rstudio
??rstudio
?do
author:
date:
First Slide
First Slide
First Slide
x <- rnorm(100)
hist(x)
line(x0)
line(x)
y <- rnorm(100)
pairs(x,y)
?pairs
pairs(cbind(x,y))
library(MASS)
library(lavaan)
library(Hmisc)
library(dplyr)
library(car)
library(psych)
library(QuantPsyc)
rm(tpb_data)
n <- 500L
model_tpb <- '
att =~ .4*at1 + (-.5)*at2 + .4*at3 + .5*at4 + .3*pb1
sn  =~ .8*sn1 + .7*sn2 + (-.6)*sn3 + .6*sn4
pbc =~ .8*pb1 + .7*pb2 + .6*pb3 + (-.6)*pb4 + .3*at4
bi  =~ .8*bi1 + (-.7)*bi2 + .6*bi3
beh =~ .8*be1 + .7*be2 + .6*be3
bi  ~  .40*att + .30*sn + .40*pbc
beh ~  .40*bi  + .35*pbc + .15*att + .10*sn
att ~~ .0*sn
att ~~ .0*pbc
sn  ~~ .0*pbc
sn1 ~~ .4*sn4
pb4 ~~ .25*pb2
at1 ~~ .25*at3
'
set.seed(4142314)
tpb_data <- simulateData(model_tpb, sample.nobs=n, standardized=TRUE,
empirical=FALSE)
tpb_data_tmp <- scale(tpb_data)
tpb_data_tmp <- scale(tpb_data_tmp, scale=1/runif(18,.5,1), center=FALSE)
tpb_data_tmp <- scale(tpb_data_tmp, center=runif(18,-6,-4), scale=FALSE)
tpb_data_tmp[,c("bi1","bi2","bi3","be1","be2","be3")] <-
scale(scale(tpb_data_tmp[,c("bi1","bi2","bi3","be1","be2","be3")]),
scale=1/runif(6,.5,.7),
center=runif(6,-7,-5))
case_id <- paste("Case", 1:n)
tpb_data_item <- data.frame(case_id, round(tpb_data_tmp), stringsAsFactors=FALSE)
describe(tpb_data_item[,-1])
View(tpb_data)
View(tpb_data_tmp)
View(tpb_data_tmp)
View(tpb_data)
?View
alpha(subset(tpb_data_item, select=att_item_names), keys=c("at2"),
title="Attitude")$total$raw_alpha
att_item_names <- c("at1", "at2", "at3", "at4")
sn_item_names <- c("sn1", "sn2", "sn3", "sn4")
pbc_item_names <- c("pb1", "pb2", "pb3", "pb4")
bi_item_names <- c("bi1", "bi2", "bi3")
beh_item_names <- c("be1", "be2", "be3")
tpb_bi_iv_item_names <- c(att_item_names, sn_item_names, pbc_item_names)
tpb_beh_iv_item_names <- c(tpb_bi_iv_item_names, bi_item_names)
tpb_all_item_names <- c(att_item_names, sn_item_names, pbc_item_names,
bi_item_names, beh_item_names)
alpha(subset(tpb_data_item, select=att_item_names), keys=c("at2"),
title="Attitude")$total$raw_alpha
alpha(subset(tpb_data_item, select=sn_item_names), keys=c("sn3"),
title="Subjective Norm")$total$raw_alpha
alpha(subset(tpb_data_item, select=pbc_item_names), keys=c("pb4"),
title="Perceived Behavioral Control")$total$raw_alpha
alpha(subset(tpb_data_item, select=bi_item_names), keys=c("bi2"),
title="Behavioral Intention")$total$raw_alpha
alpha(subset(tpb_data_item, select=beh_item_names),
title="Observed Behavior")$total$raw_alpha
# Disadvantage: Not flexible in handling missing data.
tpb.scores <- mutate(tpb_data_item,
att = (at1 + (10+1-at2) + at3 + at4)/4,
sn  = (sn1 + sn2 + (10+1-sn3) + sn4)/4,
pbc = (pb1 + pb2 + pb3 + (10+1-pb4))/4,
bi  = (bi1 + (7+1-bi2) + bi3)/3,
beh = (be1 + be2 + be3)/3)
# main="Scatter Plots for All Variables")
pairs.panels(subset(tpb.scores, select=c(beh, bi, att, sn, pbc)),
main="Scatter Plots for All Variables")
myfile <-
structure(list(V1 = c(1L, 2L, 1L, 4L, 5L), V2 = c(2L, 4L, 4L,
5L, 5L), V3 = c(3L, 4L, 1L, 1L, 5L), V4 = c(5L, 1L, 1L, 3L, 4L
)), .Names = c("V1", "V2", "V3", "V4"), class = "data.frame", row.names = c("1",
"2", "3", "4", "5"))
myfile
mutate(myfile, V5 = (V1 == 1 & V2 != 4) + 2 * (V2 == 4 & V3 != 1))
mutate(myfile, V5 = ifelse(V1 == 1, 1, ifelse(V1 == 2, 3, NA)))
?switch
switch(1, "A", "B", "C")
switch(2, "A", "B", "C")
switch("A", A=1, B=1, C=2, default=9)
switch("AB", A=1, B=1, C=2, default=9)
switch("ABC", A=1, B=1, C=2, default=9)
switch("B", A=1, B=1, C=2, default=9)
switch("C", A=1, B=1, C=2, default=9)
switch("D", A=1, B=1, C=2, default=9)
switch("D", A=1, B=1, C=2, default=NA)
switch("D", A=1, B=1, C=2, NA)
mutate(myfile, V5 = switch(V1, "A", "B", "C", "D")
)
a <- 1:5
library("translations", lib.loc="C:/Statistics/R/R-3.1.2/library")
ifelse(10<)
install.packages("transmission")
mutate(myfile, V5 = switch(V1, "A", "B", "C", "D"))
mutate(myfile, V5 = sapply(V1, switch, 1="A", 2="B", 3="C", "D"))
mutate(myfile, V5 = sapply(V1, switch, "A", "B", "C", "D"))
plot(temp)
x <- rnorm(100)
cars
x <- cars
temp <- rnorm(100)
hist(temp)
plot(temp)
x <- rnorm(100)
cars
x <- cars
temp <- rnorm(100)
hist(temp)
plot(temp)
temp <- rnorm(100)
hist(temp)
plot(temp)
temp <- rnorm(100)
hist(temp)
plot(temp)
source('~/.active-rstudio-document')
temp <- rnorm(100)
hist(temp)
plot(temp)
temp <- rnorm(100)
hist(temp)
library("animation", lib.loc="C:/Statistics/R/R-3.1.2/library")
?mean
x <- c(1, 3, 5, 10, 12, 15)
mean(x)
sd(x)
hist(y)
y <- rnorm(100)
hist(y)
library("psych", lib.loc="C:/Statistics/R/R-3.1.2/library")
library("QuantPsyc", lib.loc="C:/Statistics/R/R-3.1.2/library")
library("dplyr", lib.loc="C:/Statistics/R/R-3.1.2/library")
x <- rnorm(100)
y <- .6*x + rnorm(100,2,sqrt(1-.6^2))
plot(x,y)
data1 <- data.frame(x,y)
data1
lm(y ~ x + z, data=data1)
with(data1, lm(y ~ x + z))
with(data1, lm(y ~ x + z))
class(with(data))
with(data, ls())
class(with(data1))
with(data, ls())
with(data1, ls())
ls
ls()
rm(temp
)
x <- rnorm(100)
y <- .6*x + rnorm(100,2,sqrt(1-.6^2))
plot(x,y)
data1 <- data.frame(x,y)
z <- 2
lm(y ~ x + z, data=data1)
with(data1, lm(y ~ x + z))
with(data1, x + z)
data1$z <- rnorm(100)
data1
lm(y ~ x + z, data=data1)
with(data1, lm(y ~ x + z))
with(data1, x + z)
with(data1, tmp <- lm(y ~ x + z))
with(data1, tmp <- lm(y ~ x + z))
tmp
tmp2 <- with(data1, lm(y ~ x + z))
tmp3 <- lm(y ~ x + z, data=data1)
identical(tmp2, tmp3)
with(data1, xyz <- x + y + z)
library("metaSEM", lib.loc="C:/Statistics/R/R-3.1.2/library")
library("lavaan", lib.loc="C:/Statistics/R/R-3.1.2/library")
install.packages(c("boot", "car", "codetools", "devtools", "digest", "dplyr", "foreign", "Formula", "gss", "Hmisc", "httr", "jsonlite", "knitr", "manipulate", "MASS", "Matrix", "matrixStats", "metafor", "mgcv", "moments", "multcomp", "mvtnorm", "nlme", "plotrix", "psych", "qgraph", "RandomFields", "RColorBrewer", "RcppEigen", "RCurl", "reshape2", "rgl", "rmarkdown", "rstudioapi", "shape", "shiny", "sn", "sp", "swirl", "tcltk2", "TH.data", "vcdExtra"))
install.packages(c("manipulate", "matrixStats", "pbivnorm", "Rcpp", "timeDate", "timeSeries"))
setwd("J:/GitHub/statDemos")
library(shiny)
runApp("mediationStdES")
runApp("mediationStdES")
runApp("mediationStdES")
